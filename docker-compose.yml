version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: alfa_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-alfa_db}
      MYSQL_USER: ${MYSQL_USER:-alfa_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-alfa_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./alfa-test/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - alfa_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # API Backend (Python Flask)
  alfa-api:
    build: ./alfa-test
    container_name: alfa_api
    restart: unless-stopped
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${MYSQL_USER:-alfa_user}
      DB_PASSWORD: ${MYSQL_PASSWORD:-alfa_password}
      DB_NAME: ${MYSQL_DATABASE:-alfa_db}
      FLASK_ENV: ${FLASK_ENV:-production}
    ports:
      - "5000:5000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - alfa_network
    volumes:
      - ./alfa-test/app:/app/app:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Angular con Nginx
  alfa-frontend:
    image: nginx:alpine
    container_name: alfa_frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./alfa-frontend/dist/alfa-frontend/browser:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - alfa-api
    networks:
      - alfa_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Portainer para administración
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - alfa_network
    command: --admin-password-file /data/admin_password

  # Watchtower para actualizaciones automáticas (opcional)
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
    networks:
      - alfa_network

volumes:
  mysql_data:
    driver: local
  portainer_data:
    driver: local

networks:
  alfa_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
